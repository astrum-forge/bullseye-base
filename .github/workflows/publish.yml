name: docker publish
on:
  push:
    tags:
      - '*'
jobs:
  build-amd64:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: setup qemu
        uses: docker/setup-qemu-action@v3
      - name: setup docker context for buildx
        id: buildx-context
        run: |
          docker context create builders
      - name: setup buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          endpoint: builders
      - name: set version from tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: print version number
        run: echo ${{ env.RELEASE_VERSION }}
      - name: login to dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            astrumforge/bullseye-base:latest-amd64
            astrumforge/bullseye-base:${{ env.RELEASE_VERSION }}-amd64
  build-arm64:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: setup qemu
        uses: docker/setup-qemu-action@v3
      - name: setup docker context for buildx
        id: buildx-context
        run: |
          docker context create builders
      - name: setup buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          endpoint: builders
      - name: set version from tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: print version number
        run: echo ${{ env.RELEASE_VERSION }}
      - name: login to dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: ./Dockerfile
          platforms: linux/arm64
          tags: |
            astrumforge/bullseye-base:latest-arm64
            astrumforge/bullseye-base:${{ env.RELEASE_VERSION }}-arm64
  build-manifest:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    needs: [build-amd64, build-arm64]
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: set version from tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: print version number
        run: echo ${{ env.RELEASE_VERSION }}
      - name: setup qemu
        uses: docker/setup-qemu-action@v3
      - name: login to dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: create versioned manifest and push
        run: |
          docker manifest create \
            astrumforge/bullseye-base:${{ env.RELEASE_VERSION }} \
            --amend astrumforge/bullseye-base:${{ env.RELEASE_VERSION }}-amd64 \
            --amend astrumforge/bullseye-base:${{ env.RELEASE_VERSION }}-arm64
          docker manifest push astrumforge/bullseye-base:${{ env.RELEASE_VERSION }}
      - name: create latest manifest and push
        run: |
          docker manifest create \
            astrumforge/bullseye-base:latest \
            --amend astrumforge/bullseye-base:latest-amd64 \
            --amend astrumforge/bullseye-base:latest-arm64
          docker manifest push astrumforge/bullseye-base:latest